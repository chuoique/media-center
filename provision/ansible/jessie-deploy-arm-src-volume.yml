- hosts: all
  remote_user: pi
  vars_files:
    - 'variables.yml'
  tasks:
    - name: ensure dir
      file: path={{ app_dir }} state=directory

    - name: create deploy bash script
      environment:
        START_SCRIPT: "{{ start_script }}"
        DATA_DIR: "{{ data_dir }}"
        DB_DIR: "{{ db_dir }}"
        CACHE_DIR: "{{ cache_dir }}"
        TRAKT_ID: "{{ trakt_id }}"
        TRAKT_SECRET: "{{ trakt_secret }}"
        TMDB_KEY: "{{ tmdb_key }}"
        ERROR_BOARD_URL: "{{ error_board_url }}"
      local_action: shell bash provision/create-deploy.sh

    - name: build project
      local_action: shell bash start-dev.sh run yarn build

    - name: create a separate dependency file
      local_action: shell bash provision/create-deps.sh

    - name: copy start script
      copy: src=../{{ start_script }} dest={{ app_dir }}/

    - name: copy app.js
      copy: src=../../app.js dest={{ app_dir }}/

    - name: copy deps.json
      copy: src=../../deps.json dest={{ app_dir }}/

    - name: copy yarn.lock
      copy: src=../../yarn.lock dest={{ app_dir }}/

    - name: copy docker-compose-base-arm.yml
      copy: src=../docker-compose-base-arm.yml dest={{ app_dir }}/docker-compose.yml

    - name: copy docker-compose-base-arm.yml
      copy: src=../docker-compose-arm-src-volume.yml dest={{ app_dir }}/docker-compose.override.yml

    - name: copy rpi-media-center/Dockerfile
      copy: src=../docker/rpi-media-center-arm-src-volume/Dockerfile dest={{ app_dir }}/

    - name: copy lib/
      synchronize: src=lib/ dest={{ app_dir }}/lib/ delete=yes recursive=yes

    - name: copy public/
      synchronize: src=public/ dest={{ app_dir }}/public/ delete=yes recursive=yes

    - name: copy provision/
      synchronize: src=provision/ dest={{ app_dir }}/provision/ delete=yes recursive=yes

    - name: run docker-compose
      shell: bash "{{ start_script }}"
      args:
        chdir: "{{ app_dir }}"
